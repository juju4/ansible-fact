---

- name: Fedora | Use systemctl for nginx restart
  ansible.builtin.lineinfile:
    dest: "{{ fact_root }}/src/install/frontend.py"
    regexp: "^    nginx_output, nginx_code = execute_shell_command_get_return_code.'sudo (.*)'.$"
    line: "    nginx_output, nginx_code = execute_shell_command_get_return_code('sudo systemctl restart nginx')"
    mode: '0644'
  when: ansible_distribution == 'Fedora'

# /var/_fact/FACT_core/src/web_interface/templates/maintenance.html
- name: Allow nobody (nginx) to traverse home
  ansible.posix.acl:
    path: "{{ fact_home }}"
    entity: nobody
    etype: user
    permissions: x

- name: Github | review nginx.conf
  ansible.builtin.replace:
    dest: "{{ fact_root }}/src/config/nginx.conf"
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
    mode: '0644'
  with_items:
    - { re: '^        listen   443;', rep: '        listen   443 ssl;' }
    - { re: '^        ssl on;', rep: '        # ssl on;' }
  when: fact_nginx_shim

- name: Nginx | Ensure logs in target directory
  ansible.builtin.replace:
    dest: "{{ fact_root }}/src/config/nginx.conf"
    regexp: "access_log .* compression;"
    replace: "access_log {{ fact_logdir }}/fact_web.log compression;"
    mode: '0644'

- name: Ensure certificates and log files are accessible to www-data
  ansible.posix.acl:
    path: "{{ item.p }}"
    entity: "{% if ansible_os_family == 'RedHat' %}nginx{% else %}www-data{% endif %}"
    etype: user
    permissions: "{{ item.perm }}"
    state: present
  loop:
    # only exist after install.py
    # - { p: /etc/nginx/fact.key,
    #     perm: r
    # }
    - { p: /var/log/nginx,
        perm: rwx
    }
