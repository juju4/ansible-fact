---

# https://github.com/fkie-cad/FACT_core/blob/master/INSTALL.md
- name: Debian | refresh apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"

- name: Import redhat-mongodb
  ansible.builtin.import_tasks: redhat-mongodb.yml
  when: ansible_os_family == "RedHat"

- name: Update latest packages
  ansible.builtin.package:  # noqa package-latest
    name: '*'
    state: latest

- name: Ensure dependencies packages are present
  ansible.builtin.package:
    name: "{{ fact_pkgs }}"
    state: present

- name: Ensure dedicated user exists
  ansible.builtin.user:
    name: _fact
    home: "{{ fact_home }}"
    comment: 'Firmware Analysis and Comparison Tool (FACT)'
    system: yes
    groups: docker
    append: yes
    state: present

- name: Give sudoers access to fact user - at least for install
  ansible.builtin.lineinfile:
    dest: /etc/sudoers.d/fact-user
    line: "{{ fact_user }} ALL=(ALL) NOPASSWD:ALL"
    mode: '0440'
    create: yes
    backup: "{{ fact_backup | default(false) }}"

- name: Ensure right permissions for ansible remote_tmp
  ansible.builtin.file:
    path: "{{ fact_home }}/.ansible/tmp"
    state: directory
    mode: '0700'
    owner: "{{ fact_user }}"

- name: Clone FACT repository
  ansible.builtin.git:
    repo: "{{ fact_repo }}"
    dest: "{{ fact_root }}"
    version: "{{ fact_version }}"
    update: no
    force: no
  become: yes
  become_user: "{{ fact_user }}"

- name: Ensure directories exist
  ansible.builtin.file:
    path: "{{ item.p }}"
    state: directory
    owner: "{{ fact_user }}"
    mode: "{{ item.m }}"
  with_items:
    - { p: "{{ fact_datadir }}", m: '0700' }
    - { p: "{{ fact_logdir }}", m: '0700' }
    - { p: "{{ fact_root }}/src/bin", m: '0700' }

- name: FACT pre-install | Add docker to pip requirements for ansible module
  ansible.builtin.lineinfile:
    dest: "{{ fact_root }}/src/install/requirements_pre_install.txt"
    mode: '0644'
    line: docker

- name: FACT pre-install | pip dependencies
  ansible.builtin.pip:
    requirements: "{{ fact_root }}/src/install/requirements_pre_install.txt"
    extra_args: --upgrade --prefer-binary
    virtualenv: "{{ fact_python_virtualenv | default(omit) }}"
  become: yes
  become_user: "{{ fact_user }}"

- name: FACT pre-install | pip dependencies non-virtualenv
  ansible.builtin.package:
    name:
      - python3-requests
      - python3-docker
  when:
    - fact_python_virtualenv is defined
    - fact_python_virtualenv | length > 0

- name: Import proxy
  ansible.builtin.import_tasks: proxy.yml

- name: Pull Docker images
  community.general.docker_image:
    name: "{{ item }}"
    source: pull
  with_items: "{{ fact_docker_images }}"
  # FIXME! not working
  # environment:
  #   ansible_python_interpreter: "{{ fact_python_virtualenv_bin | default(omit) }}"

- name: Check if freshclam completed main.cvd download
  ansible.builtin.stat:
    path: /var/lib/clamav/main.cvd
  register: cvd
- name: Ensure dependencies services are started
  ansible.builtin.service:
    name: clamav-daemon
    state: started
  when: ansible_os_family == "Debian" and cvd.stat.exists

# review src/config/main.cfg, src/config/mongod.conf
- name: Update config
  community.general.ini_file:
    path: "{{ fact_root }}/src/config/main.cfg"
    section: "{{ item.s }}"
    option: "{{ item.o }}"
    value: "{{ item.v }}"
    mode: '0600'
    backup: "{{ fact_backup | default(false) }}"
  with_items: "{{ fact_main_config }}"
  notify:
    - Restart fact-db
    - Restart fact-backend
    - Restart fact-frontend

- name: Check if marker exists
  ansible.builtin.stat:
    path: "{{ fact_root }}/.before_install_py"
  register: mark
- name: Add marker
  ansible.builtin.file:
    path: "{{ fact_root }}/.before_install_py"
    state: touch
    mode: '0600'
  when: not mark.stat.exists

- name: Fedora 35+ | Remove setuptools requirements - conflicts with rpm
  ansible.builtin.lineinfile:
    dest: "{{ fact_root }}/src/install/requirements_common.txt"
    regexp: '^setuptools'
    state: absent
    mode: '0644'
  when: ansible_distribution == 'Fedora' and ansible_distribution_major_version|int >= 35

- name: Ubuntu 24.04+ | Remove setuptools requirements
  ansible.builtin.replace:
    dest: "{{ fact_root }}/src/install/common.py"
    regexp: "run_cmd_with_logging\\('pip install -U pip setuptools wheel'\\)"
    replace: "run_cmd_with_logging('echo DISABLED pip install -U pip setuptools wheel')"
    mode: '0644'
  when:
    - ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 24
    - false  # should not be needed if virtualenv is detected correctly

- name: Import lief
  ansible.builtin.import_tasks: lief.yml

- name: Import nginx
  ansible.builtin.import_tasks: nginx.yml

- name: FACT pre-install | pip dependencies requirements_common
  ansible.builtin.pip:
    requirements: "{{ fact_root }}/src/install/requirements_common.txt"
    extra_args: --upgrade --prefer-binary
    virtualenv: "{{ fact_python_virtualenv | default(omit) }}"
  become: yes
  become_user: "{{ fact_user }}"
  failed_when: false

- name: Fact python installer - distutils workaround
  ansible.builtin.replace:
    dest: "{{ fact_root }}/src/install/common.py"
    regexp: '^        if return_code != 0:'
    replace: "        if return_code != 0 and 'UserWarning: Distutils was imported before Setuptools' not in output:"
    mode: '0644'

- name: Ensure conflict packages are absent
  ansible.builtin.package:
    name: "{{ fact_conflict_pkgs | default([]) }}"
    state: absent

- name: FACT install - python way
  ansible.builtin.shell: |
    set -o pipefail
    python {{ fact_root }}/src/install.py -N -U | tee {{ fact_root }}/install.log
  args:
    chdir: "{{ fact_root }}"
    creates: "{{ fact_root }}/src/objects/__pycache__"
    executable: /bin/bash
  become: yes
  become_user: "{{ fact_user }}"
  # notify:
  #   - remove sudo access
  when:
    - fact_python_virtualenv is not defined or fact_python_virtualenv == None

- name: FACT install - virtualenv python way
  ansible.builtin.shell: |
    set -o pipefail
    . {{ fact_python_virtualenv }}/bin/activate
    python {{ fact_root }}/src/install.py -N -U | tee {{ fact_root }}/install.log
  args:
    chdir: "{{ fact_root }}"
    creates: "{{ fact_root }}/src/objects/__pycache__"
    executable: /bin/bash
  become: yes
  become_user: "{{ fact_user }}"
  when:
    - fact_python_virtualenv is defined
    - fact_python_virtualenv | length > 0

- name: Import systemd
  ansible.builtin.import_tasks: systemd.yml
