---
name: AnsibleCI

on:
  push:
  pull_request:
  schedule:  # run weekly, every Tuesday 04:00
    - cron: '0 4 * * 2'

jobs:
  build:

    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - distribution: fedora
            version: 33
            version2: 33
            suite: default
            experimental: true
          - distribution: ubuntu
            version: '20.04'
            version2: 2004
            suite: default
            experimental: false
          - distribution: ubuntu
            version: '18.04'
            version2: 1804
            suite: default
            experimental: false
    env:
      ANSIBLE_CALLBACK_WHITELIST: profile_tasks
      ANSIBLE_EXTRA_VARS: "-e fact_nginx_shim=true"

    steps:
      - uses: actions/checkout@v2
        with:
          path: juju4.fact
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible-lint flake8 yamllint
          which ansible
          pip3 install ansible
          pip3 show ansible
          ansible --version
          cd $GITHUB_WORKSPACE/juju4.fact
          [ -f get-dependencies.sh ] && sh -x get-dependencies.sh
          { echo '[defaults]'; echo 'callback_whitelist = profile_tasks, timer'; echo 'roles_path = ../'; echo 'ansible_python_interpreter: /usr/bin/python3'; } >> ansible.cfg
          { echo '[facthosts]'; echo 'localhost'; } >> inventory
          cat inventory
      - name: Environment
        run: |
          pwd
          env
          find -ls
          df -h
      - name: Free disk space
        run: |
          sudo rm -Rf /usr/local/lib/android
          df -h
      - name: Install lxd requirements
        run: |
          sudo apt-get update -qq
          sudo apt-get -y install lxd acl dnsmasq-base zfsutils-linux -q
          whoami
          grep lxd /etc/group
          echo "# remote list"
          lxc remote list
          echo "# image list"
          sudo lxc image list
          echo "# download image"
          [ ${{ matrix.distribution }} == ubuntu ] || sudo lxc image copy images:${{ matrix.distribution }}/${{ matrix.version }}/amd64 local: --alias=${{ matrix.distribution }}-${{ matrix.version }}-nossh || true
          [ ${{ matrix.distribution }} == ubuntu ] && sudo lxc image copy ubuntu:${{ matrix.version }} local: --alias=${{ matrix.distribution }}-${{ matrix.version }} || true
          echo "# image list"
          sudo lxc image list
          ## configure network
          ifconfig -a || true
          ip addr || true
          sudo lxc info
          sudo lxc network list
          sudo lxc network create lxdbr0
          sudo lxc network show lxdbr0
          sudo lxc network attach-profile lxdbr0 default ens4
          sudo lxc profile device get default ens4 nictype || true
          sudo service lxd restart || true
          ps ax | grep dnsmasq
          systemctl status -l --no-pager lxd || true
          cat /etc/network/interfaces.d/50-cloud-init.cfg || true
          sudo lxc network list
          # configure storage pool
          sudo lxc storage list
          sudo lxc storage create pool1 zfs size=25GB
          sudo lxc storage list
          sudo zpool list
          sudo lxc profile device add default root disk path=/ pool=pool1
          sudo lxc profile show default
          [ "X${{ matrix.distribution }}" == "Xcentos" -o "X${{ matrix.distribution }}" == "Xfedora" ] && cd $GITHUB_WORKSPACE/juju4.fact && sudo sh -x ./test/lxd/centos-ssh-image.sh ${{ matrix.version }} || true
      - name: Install kitchen requirements
        run: |
          sudo gem install test-kitchen --version "=1.25.0"
          sudo gem install kitchen-ansible
          sudo gem install kitchen-sync
          sudo gem install kitchen-lxd_cli
          sudo apt-get install -y libsodium23
          sudo gem install rbnacl --version 4.0.2
          sudo gem install bcrypt_pbkdf rbnacl-libsodium
          sudo -H ssh-keygen -t ed25519 -f /root/.ssh/id_rsa -P ""
          sudo ls -lA /root/.ssh/
          cd $GITHUB_WORKSPACE/juju4.fact && sudo kitchen diagnose --all
      # https://github.com/actionshub/test-kitchen
      - name: Install Chef
        uses: actionshub/chef-install@main
      - name: Kitchen Converge
        run: |
          cd $GITHUB_WORKSPACE/juju4.fact && sudo kitchen converge ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -l debug
        env:
          CHEF_LICENSE: accept-no-persist
          KITCHEN_LOCAL_YAML: $GITHUB_WORKSPACE/juju4.fact/.kitchen.yml
          TERM: xterm-256color
      - name: Kitchen Verify
        run: |
          cd $GITHUB_WORKSPACE/juju4.fact && sudo kitchen verify ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }}
        env:
          CHEF_LICENSE: accept-no-persist
          KITCHEN_LOCAL_YAML: $GITHUB_WORKSPACE/juju4.fact/.kitchen.yml
          TERM: xterm-256color

      - name: On failure
        run: |
          cd $GITHUB_WORKSPACE/juju4.fact
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ansible -i inventory --connection=local -m setup localhost' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager --failed' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ls -l /usr/bin/ | egrep "(python|pip|ansible)"' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'pip freeze' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'pip3 freeze' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ip addr' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'cat /etc/resolv.conf' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'host www.google.com' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ping -c 1 www.google.com' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ping -c 1 8.8.8.8' || true
          df -h
          sudo lxc storage list
          sudo zpool list
        if: ${{ failure() }}
        continue-on-error: true
      - name: After script - systemd
        run: |
          cd $GITHUB_WORKSPACE/juju4.fact
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status fact-backend' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status fact-db' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status fact-frontend' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status mongodb' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status nginx' || true
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'systemctl -l --no-pager status docker' || true
      - name: After script - files
        run: |
          cd $GITHUB_WORKSPACE/juju4.fact
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ls -lR /var/_fact/FACT_core/'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ls -lR /var/_fact/FACT_core/src/config'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'cat /var/_fact/FACT_core/src/config/main.cfg'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'cat /var/_fact/FACT_core/src/config/mongod.conf'
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - nginx
        run: |
          cd $GITHUB_WORKSPACE/juju4.fact
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'find /etc/nginx -type f -ls'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'ls -la /etc/nginx/nginx.conf'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'cat /etc/nginx/nginx.conf'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'nginx -V'
          sudo kitchen exec ${{ matrix.suite }}-${{ matrix.distribution }}-${{ matrix.version2 }} -c 'nginx -t'
        if: ${{ always() }}
        continue-on-error: true
